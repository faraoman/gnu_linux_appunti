# Practice regexes
http://refiddle.com/


[[:alnum:]] [a-zA-Z0-9]
[[:alpha:]] [a-zA-Z]
[[:digit:]] [0-9]
[[:blank:]] [ \t]
grep '[[:digit:]]{3,6}' # match between 3 and 6 digits consecutive digits
[[:punct:]] [!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~]
[[:graph:]] [[:alnum:]] + [[:punct:]]
[[:print:]] '[[:alnum:]]', '[[:punct:]]', and space
[[:xdigit:]] [0 1 2 3 4 5 6 7 8 9 A B C D E F a b c d e f]
[[:lower:]] [a-z]
[[:upper:]] [A-Z]
\bword\b  word delimiters
For example, ‘\brat\b’ matches the separate word ‘rat’, ‘\Brat\B’│matches ‘crate’ but not ‘furry rat’


# grep 
. character
[abc].e matches either a b c and a character and e
grep '[[:digit:]]\+' # one or more digits 
grep '[[:digit:]]\{3,6\}' # between 3 and 6 digits
grep 'ciao\|hello' # ciao or hello
grep '\(ciao\)\{3\}' # match ciaociaociao
grep 'c\?a ' # c is optional
$ ending
^ starting



## egrep 
basically in egrep we don't escape ? () {} | +

. character
[abc].e matches either a b c and a character and e
grep '[[:digit:]]+' # one or more digits 
grep '[[:digit:]]{3,6}' # between 3 and 6 digits
grep 'ciao|hello' # ciao or hello
grep '(ciao|hello) Luca' # ciao or hello and then Luca
grep '(ciao){3}' # match ciaociaociao
grep 'c?a ' # c is optional
$ ending
^ starting


sed can use basic regex or extended with -E


Examples of advanced matching:
grep -oP 'group="16".*>\K.+(?=</fct>)'

Note how the `\K` resets the expression starting to match from the
`\K` combination until the end.  The `\K` is very useful when we want
to extract substrings, or in general match after a specific regex.
Then the `?=` means to match only if the string after `.+` is continued
by the combination of characters `</fct>` note that these will not be
resulting in the matching string.  Here we can see how a combination of
`\K` (or a lookbehind) and a lookahead like `(?=)` is helpful to only
match something which is after a certain regex and before another regex.
NOTE that using a lookbehind like (?<=) is somewhat equivalent to using
`\K` with the only difference being that `\K` accepts regex while
the lookbehind cannot accept regex which generate varying size strings.

The above example  will match all the contents of a file done like this:
```txt
<ciao> cawda wwd wda </ciao>
<ciao> cawda wwd wda </ciao>
<ciao> cawda wwd wda </ciao>
<lal> cawda wwd wda </lal>
<lal group="16"> cawda wwd wda </lal>
<lal group="16" subgroup="lall"> cawda wwd wda </lal>
<lal group="16" thirf="dwdwa" > cawda wwd wda </lal>
<lal group="16" thirf="dwdwa" >wda </fct>
<lal group="16">cawda wwd wda 2222 </fct>
```
Resulting in:
```txt
wda
cawda wwd wda 2222 
```

